"""add unique api_token_id

Revision ID: c0bfeeca22a9
Revises: 3ad8934ab327
Create Date: 2025-04-18 19:23:07.064654

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c0bfeeca22a9"
down_revision: Union[str, None] = "3ad8934ab327"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user", sa.Column("api_key_id", sa.Integer(), nullable=True))

    # Set api_key_id to 0 for all existing rows
    conn = op.get_bind()
    conn.execute(sa.text('UPDATE "user" SET api_key_id = 0'))

    # Now make the column NOT NULL
    op.alter_column("user", "api_key_id", nullable=False)

    # Continue with the rest of the migration
    op.alter_column("user", "api_key", existing_type=sa.VARCHAR(), nullable=False)
    op.drop_constraint("user_api_key_key", "user", type_="unique")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("user_api_key_key", "user", ["api_key"])
    op.alter_column("user", "api_key", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_column("user", "api_key_id")
    # ### end Alembic commands ###

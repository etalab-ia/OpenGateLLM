services:
  api:
    #image: ghcr.io/etalab-ia/albert-api/app:latest
    build:
      context: .
      dockerfile: app/Dockerfile
    command: /startup.sh
    environment:
      - PORT=8000
      - CONFIG_FILE=/home/albert/conf/config.yml
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ./config.yml:/home/albert/conf/config.yml:ro
      - ./app:/app
    depends_on:
      redis:
        condition: service_healthy

  ui:
    image: ghcr.io/etalab-ia/albert-api/ui:latest
    command: streamlit run ui/main.py --server.port=8501 --browser.gatherUsageStats false --theme.base=light --theme.primaryColor=#6a6af4 --server.maxUploadSize=20
    restart: always
    environment:
      - BASE_URL=http://api:8000/v1
      - DOCUMENTS_EMBEDDINGS_MODEL=meta-llama/Llama-3.1-8B-Instruct
      - EXCLUDE_MODELS=BAAI/bge-m3
    ports:
      - 8501:8501

  redis:
    image: redis/redis-stack-server:7.2.0-v11
    restart: always
    environment:
      REDIS_ARGS: --dir /data --requirepass changeme --user username on >password ~* allcommands --save 60 1 --appendonly yes
    volumes:
      - redis:/data
    healthcheck:
        test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
        interval: 4s
        timeout: 10s
        retries: 5
    ports:
      - 6379:6379

  qdrant:
    image: qdrant/qdrant:v1.11.5-unprivileged
    restart: always
    environment:
      - QDRANT__SERVICE__API_KEY=changeme
    volumes:
      - qdrant:/qdrant/storage
    ports:
      - 6333:6333
      - 6334:6334

  postgres_test:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: albert_test
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  qdrant:
  redis:
  postgres:

services:
  redis:
    image: redis/redis-stack-server:7.2.0-v11
    restart: always
    environment:
      REDIS_ARGS: --dir /data --requirepass changeme --user username on >password ~* allcommands --save 60 1 --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 4s
      timeout: 10s
      retries: 5

  qdrant:
    image: qdrant/qdrant:v1.11.5-unprivileged
    restart: always
    environment:
      - QDRANT__SERVICE__API_KEY=changeme
    volumes:
      - qdrant:/qdrant/storage
    ports:
      - 6333:6333
      - 6334:6334
    healthcheck:
      test: [ "CMD-SHELL", "bash", "-c", ":> /dev/tcp/127.0.0.1/6333" ]
      interval: 4s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:16.5
    restart: always
    user: postgres
    environment:
      - CREATE_DB=api,playground
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./scripts/postgres_entrypoint.sh:/docker-entrypoint-initdb.d/postgres_entrypoint.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres" ]
      interval: 4s
      timeout: 10s
      retries: 5
      start_period: 60s

  mcp-bridge:
    image: ghcr.io/etalab-ia/albert-api-mcp-bridge/albert-api-mcp-bridge:latest
    develop:
      watch:
        - path: mcp_bridge
          action: rebuild
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "9876:8000"
    environment:
      - MCP_BRIDGE__CONFIG__FILE=config.json
    volumes:
      - ./mcp/config.json:/mcp_bridge/config.json
      - ./mcp/data_gouv_fr_mcp_server:/mcp_bridge/data-gouv-fr-mcp-server
    restart: unless-stopped

volumes:
  qdrant:
  redis:
  postgres:
